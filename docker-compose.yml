version: "3"
services:
  app: &app
    build:
      context: .
    ports:
      - "0.0.0.0:8000:8000"
    networks:
      - webnet
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env.db
    volumes:
      - .:/app:rw
    depends_on:
      - db
      - memcached
  db:
    image: postgres:11.4
    volumes:
      - ./shared/postgresql:/var/lib/postgresql/data
    env_file:
      - .env.db
    ports:
      - '0.0.0.0:5432:5432'
    networks:
      - webnet
  memcached:
    image: 'bitnami/memcached:latest'
    ports:
      - '0.0.0.0:11211:11211'
    networks:
      - webnet
  redis:
    image: redis:3.0
    networks:
      - webnet
  celeryworker:
    <<: *app
    container_name: cinema-city-clone-celeryworker
    depends_on:
      - redis
      - db
    ports: []
    command: /start-celeryworker.sh

  celerybeat:
    <<: *app
    container_name: cinema-city-clone-celerybeat
    depends_on:
      - redis
      - db
    ports: []
    command: /start-celerybeat.sh

  flower:
    <<: *app
    container_name: cinema-city-clone-flower
    ports:
      - "5555:5555"
    command: /start-flower.sh
networks:
  webnet: